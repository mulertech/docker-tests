#!/usr/bin/env php
<?php

function getProjectDir(): string
{
    $projectDir = dirname(__DIR__);

    while (!file_exists($projectDir . '/composer.json')) {
        $projectDir = dirname($projectDir);
    }

    return $projectDir;
}

function getPhpVersion(): string
{
    $composer = file_get_contents(getProjectDir() . '/composer.json');
    preg_match('/"php": "(.+)"/', $composer, $matches);
    $php = $matches[1] ?? '';

    if ($php === '') {
        return '';
    }

    preg_match_all('/[\^>=~]+([0-9]\.[0-9]*)|[\^>=~]+([0-9]\.[0-9]*)/', $php, $matches);
    return $matches[1][1] ?? $matches[1][0] ?? '';
}

function getContainerName(): string
{
    $phpVersion = getPhpVersion();
    return $phpVersion === '' ? 'mt-docker-latest' : 'mt-docker-' . $phpVersion;
}

function createEnvFile(): void
{
    $uid = getmyuid();
    $gid = getmygid();
    $phpVersion = getPhpVersion();
    $image = 'php:' . ($phpVersion === '' ? '' : $phpVersion . '-') . 'fpm-alpine';
    $containerName = $phpVersion === '' ? 'mt-docker-latest' : 'mt-docker-' . $phpVersion;

    $write = file_put_contents(
        getProjectDir() . '/.env.test', 'PHP_IMAGE=' . $image . PHP_EOL . 'USER_ID=' . $uid . PHP_EOL . 'GROUP_ID=' . $gid . PHP_EOL . 'CONTAINER_NAME=' . $containerName
    );

    if ($write === false) {
        echo 'Failed to create .env file';
    }
}

function dockerComposeCommand(): string
{
    $projectDir = getProjectDir();
    $dockerTestDir = $projectDir . DIRECTORY_SEPARATOR . 'vendor' . DIRECTORY_SEPARATOR . 'mulertech' . DIRECTORY_SEPARATOR . 'docker-tests';
    $projectName = str_replace('.', '-', getContainerName());
    return 'docker compose -f ' . $dockerTestDir . DIRECTORY_SEPARATOR . 'compose.yml --env-file ' . $projectDir . DIRECTORY_SEPARATOR . '.env.test --project-name ' . $projectName;
}

function dockerComposeUp(string $arg2): void
{
    createEnvFile();
    $command = dockerComposeCommand() . ' up';
    $command .= $arg2 === '-d' ? ' -d' : '';
    exec($command);
}

function dockerComposeDown(): void
{
    $command = dockerComposeCommand() . ' down';
    exec($command);
}

function test(): void
{
    $containerName = getContainerName();
    $dockerUp = str_contains(exec('docker ps -a'), $containerName);
    if (!$dockerUp) {
        dockerComposeUp('-d');
    }

    $cmd = 'docker exec -it ' . $containerName . ' ./vendor/bin/phpunit';
    $output = shell_exec($cmd);
    echo $output;

    if (!$dockerUp) {
        dockerComposeDown();
    }
}

$arg1 = $_SERVER['argv'][1] ?? '';
$arg2 = $_SERVER['argv'][2] ?? '';

if ($arg1 === 'test') {
    test();
}

if ($arg1 === 'up') {
    dockerComposeUp($arg2);
}

if ($arg1 === 'down') {
    dockerComposeDown();
}